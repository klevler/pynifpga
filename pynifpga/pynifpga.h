/*
	Copyright (c) 2014 Vincent Paeder
	
	This program is free software: you can redistribute it and/or modify
    it under the terms of the GNU General Public License as published by
    the Free Software Foundation, either version 3 of the License, or
    (at your option) any later version.

    This program is distributed in the hope that it will be useful,
    but WITHOUT ANY WARRANTY; without even the implied warranty of
    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
    GNU General Public License for more details.

    You should have received a copy of the GNU General Public License
    along with this program.  If not, see <http://www.gnu.org/licenses/>.

*/

/*

 Python wrapper for NI-FPGA driver.

 This wrapper translates the NI-FPGA C API to python.

 You need NiFpga.h generated by the NI-FPGA C Interface Generator.

*/

#include <boost/python.hpp>
#include <boost/python/module.hpp>
#include <boost/python/def.hpp>
#include <boost/python/list.hpp>
using namespace boost::python;

#include "nifpgaw.h"

class pynifpga {
private:
	std::string loadedBitfile;
	std::string deviceHandle;
	nifpga fpga;
	list ArrayExportBool(NiFpga_Bool* arr, int N);
	list ArrayExportI8(int8_t* arr, int N);
	list ArrayExportU8(uint8_t* arr, int N);
	list ArrayExportI16(int16_t* arr, int N);
	list ArrayExportU16(uint16_t* arr, int N);
	list ArrayExportI32(int32_t* arr, int N);
	list ArrayExportU32(uint32_t* arr, int N);
	list ArrayExportI64(int64_t* arr, int N);
	list ArrayExportU64(uint64_t* arr, int N);
	NiFpga_Bool* ArrayImportBool(list arr);
	int8_t* ArrayImportI8(list arr);
	uint8_t* ArrayImportU8(list arr);
	int16_t* ArrayImportI16(list arr);
	uint16_t* ArrayImportU16(list arr);
	int32_t* ArrayImportI32(list arr);
	uint32_t* ArrayImportU32(list arr);
	int64_t* ArrayImportI64(list arr);
	uint64_t* ArrayImportU64(list arr);

public:
	pynifpga();
	~pynifpga();

	int GetLastStatus();
	std::string GetErrorDescription(int status);

	bool Initialize();
	bool Finalize();

	bool Open(std::string bitfile, std::string signature, std::string resource, int attribute);
	bool Close(int attribute);

	bool Run(int attribute);
	bool Abort();
	bool Reset();

	bool Download();

	bool ReadBool(int indicator);
	int ReadI8(int indicator);
	int ReadU8(int indicator);
	int ReadI16(int indicator);
	int ReadU16(int indicator);
	int ReadI32(int indicator);
	int ReadU32(int indicator);
	int ReadI64(int indicator);
	int ReadU64(int indicator);

	bool WriteBool(int control, bool value);
	bool WriteI8(int control, int value);
	bool WriteU8(int control, int value);
	bool WriteI16(int control, int value);
	bool WriteU16(int control, int value);
	bool WriteI32(int control, int value);
	bool WriteU32(int control, int value);
	bool WriteI64(int control, int value);
	bool WriteU64(int control, int value);

	list ReadArrayBool(int indicator, int size);
	list ReadArrayI8(int indicator, int size);
	list ReadArrayU8(int indicator, int size);
	list ReadArrayI16(int indicator, int size);
	list ReadArrayU16(int indicator, int size);
	list ReadArrayI32(int indicator, int size);
	list ReadArrayU32(int indicator, int size);
	list ReadArrayI64(int indicator, int size);
	list ReadArrayU64(int indicator, int size);

	bool WriteArrayBool(int control, list values);
	bool WriteArrayI8(int control, list values);
	bool WriteArrayU8(int control, list values);
	bool WriteArrayI16(int control, list values);
	bool WriteArrayU16(int control, list values);
	bool WriteArrayI32(int control, list values);
	bool WriteArrayU32(int control, list values);
	bool WriteArrayI64(int control, list values);
	bool WriteArrayU64(int control, list values);

	PyObject* ReserveIrqContext();
	bool UnreserveIrqContext(PyObject* context);
	bool WaitOnIrqs(PyObject* context, int irqs, int timeout);
	bool AcknowledgeIrqs(int irqs);

	bool ConfigureFifo(int fifo, int requestedDepth);
	bool StartFifo(int fifo);
	bool StopFifo(int fifo);

	list ReadFifoBool(int fifo, int numberOfElements, int timeout);
	list ReadFifoI8(int fifo, int numberOfElements, int timeout);
	list ReadFifoU8(int fifo, int numberOfElements, int timeout);
	list ReadFifoI16(int fifo, int numberOfElements, int timeout);
	list ReadFifoU16(int fifo, int numberOfElements, int timeout);
	list ReadFifoI32(int fifo, int numberOfElements, int timeout);
	list ReadFifoU32(int fifo, int numberOfElements, int timeout);
	list ReadFifoI64(int fifo, int numberOfElements, int timeout);
	list ReadFifoU64(int fifo, int numberOfElements, int timeout);

	int WriteFifoBool(int fifo, list data, int timeout);
	int WriteFifoI8(int fifo, list data, int timeout);
	int WriteFifoU8(int fifo, list data, int timeout);
	int WriteFifoI16(int fifo, list data, int timeout);
	int WriteFifoU16(int fifo, list data, int timeout);
	int WriteFifoI32(int fifo, list data, int timeout);
	int WriteFifoU32(int fifo, list data, int timeout);
	int WriteFifoI64(int fifo, list data, int timeout);
	int WriteFifoU64(int fifo, list data, int timeout);

	list AcquireFifoReadElementsBool(int fifo, int elementsRequested, int timeout);
	list AcquireFifoReadElementsI8(int fifo, int elementsRequested, int timeout);
	list AcquireFifoReadElementsU8(int fifo, int elementsRequested, int timeout);
	list AcquireFifoReadElementsI16(int fifo, int elementsRequested, int timeout);
	list AcquireFifoReadElementsU16(int fifo, int elementsRequested, int timeout);
	list AcquireFifoReadElementsI32(int fifo, int elementsRequested, int timeout);
	list AcquireFifoReadElementsU32(int fifo, int elementsRequested, int timeout);
	list AcquireFifoReadElementsI64(int fifo, int elementsRequested, int timeout);
	list AcquireFifoReadElementsU64(int fifo, int elementsRequested, int timeout);

	bool AcquireFifoWriteElementsBool(int fifo, list elements, int elementsRequested, int timeout);
	bool AcquireFifoWriteElementsI8(int fifo, list elements, int elementsRequested, int timeout);
	bool AcquireFifoWriteElementsU8(int fifo, list elements, int elementsRequested, int timeout);
	bool AcquireFifoWriteElementsI16(int fifo, list elements, int elementsRequested, int timeout);
	bool AcquireFifoWriteElementsU16(int fifo, list elements, int elementsRequested, int timeout);
	bool AcquireFifoWriteElementsI32(int fifo, list elements, int elementsRequested, int timeout);
	bool AcquireFifoWriteElementsU32(int fifo, list elements, int elementsRequested, int timeout);
	bool AcquireFifoWriteElementsI64(int fifo, list elements, int elementsRequested, int timeout);
	bool AcquireFifoWriteElementsU64(int fifo, list elements, int elementsRequested, int timeout);

	bool ReleaseFifoElements(int fifo, int elements);
	int GetPeerToPeerFifoEndpoint(int fifo);
};

BOOST_PYTHON_MODULE(pynifpga) {
	class_<pynifpga>("pynifpga", init<>())
		.def("GetLastStatus", &pynifpga::GetLastStatus)
		.def("GetErrorDescription", &pynifpga::GetErrorDescription)
		.def("Initialize", &pynifpga::Initialize)
		.def("Finalize", &pynifpga::Finalize)
		.def("Open", &pynifpga::Open)
		.def("Close", &pynifpga::Close)
		.def("Run", &pynifpga::Run)
		.def("Abort", &pynifpga::Abort)
		.def("Reset", &pynifpga::Reset)
		.def("Download", &pynifpga::Download)
		.def("ReadBool", &pynifpga::ReadBool)
		.def("ReadI8", &pynifpga::ReadI8)
		.def("ReadU8", &pynifpga::ReadU8)
		.def("ReadI16", &pynifpga::ReadI16)
		.def("ReadU16", &pynifpga::ReadU16)
		.def("ReadI32", &pynifpga::ReadI32)
		.def("ReadU32", &pynifpga::ReadU32)
		.def("ReadI64", &pynifpga::ReadI64)
		.def("ReadU64", &pynifpga::ReadU64)
		.def("WriteBool", &pynifpga::WriteBool)
		.def("WriteI8", &pynifpga::WriteI8)
		.def("WriteU8", &pynifpga::WriteU8)
		.def("WriteI16", &pynifpga::WriteI16)
		.def("WriteU16", &pynifpga::WriteU16)
		.def("WriteI32", &pynifpga::WriteI32)
		.def("WriteU32", &pynifpga::WriteU32)
		.def("WriteI64", &pynifpga::WriteI64)
		.def("WriteU64", &pynifpga::WriteU64)
		.def("ReadArrayBool", &pynifpga::ReadArrayBool)
		.def("ReadArrayI8", &pynifpga::ReadArrayI8)
		.def("ReadArrayU8", &pynifpga::ReadArrayU8)
		.def("ReadArrayI16", &pynifpga::ReadArrayI16)
		.def("ReadArrayU16", &pynifpga::ReadArrayU16)
		.def("ReadArrayI32", &pynifpga::ReadArrayI32)
		.def("ReadArrayU32", &pynifpga::ReadArrayU32)
		.def("ReadArrayI64", &pynifpga::ReadArrayI64)
		.def("ReadArrayU64", &pynifpga::ReadArrayU64)
		.def("WriteArrayBool", &pynifpga::WriteArrayBool)
		.def("WriteArrayI8", &pynifpga::WriteArrayI8)
		.def("WriteArrayU8", &pynifpga::WriteArrayU8)
		.def("WriteArrayI16", &pynifpga::WriteArrayI16)
		.def("WriteArrayU16", &pynifpga::WriteArrayU16)
		.def("WriteArrayI32", &pynifpga::WriteArrayI32)
		.def("WriteArrayU32", &pynifpga::WriteArrayU32)
		.def("WriteArrayI64", &pynifpga::WriteArrayI64)
		.def("WriteArrayU64", &pynifpga::WriteArrayU64)
		.def("ReserveIrqContext", &pynifpga::ReserveIrqContext)
		.def("UnreserveIrqContext", &pynifpga::UnreserveIrqContext)
		.def("WaitOnIrqs", &pynifpga::WaitOnIrqs)
		.def("AcknowledgeIrqs", &pynifpga::AcknowledgeIrqs)
		.def("ConfigureFifo", &pynifpga::ConfigureFifo)
		.def("StartFifo", &pynifpga::StartFifo)
		.def("StopFifo", &pynifpga::StopFifo)
		.def("ReadFifoBool", &pynifpga::ReadFifoBool)
		.def("ReadFifoI8", &pynifpga::ReadFifoI8)
		.def("ReadFifoU8", &pynifpga::ReadFifoU8)
		.def("ReadFifoI16", &pynifpga::ReadFifoI16)
		.def("ReadFifoU16", &pynifpga::ReadFifoU16)
		.def("ReadFifoI32", &pynifpga::ReadFifoI32)
		.def("ReadFifoU32", &pynifpga::ReadFifoU32)
		.def("ReadFifoI64", &pynifpga::ReadFifoI64)
		.def("ReadFifoU64", &pynifpga::ReadFifoU64)
		.def("WriteFifoBool", &pynifpga::WriteFifoBool)
		.def("WriteFifoI8", &pynifpga::WriteFifoI8)
		.def("WriteFifoU8", &pynifpga::WriteFifoU8)
		.def("WriteFifoI16", &pynifpga::WriteFifoI16)
		.def("WriteFifoU16", &pynifpga::WriteFifoU16)
		.def("WriteFifoI32", &pynifpga::WriteFifoI32)
		.def("WriteFifoU32", &pynifpga::WriteFifoU32)
		.def("WriteFifoI64", &pynifpga::WriteFifoI64)
		.def("WriteFifoU64", &pynifpga::WriteFifoU64)
		.def("AcquireFifoReadElementsBool", &pynifpga::AcquireFifoReadElementsBool)
		.def("AcquireFifoReadElementsI8", &pynifpga::AcquireFifoReadElementsI8)
		.def("AcquireFifoReadElementsU8", &pynifpga::AcquireFifoReadElementsU8)
		.def("AcquireFifoReadElementsI16", &pynifpga::AcquireFifoReadElementsI16)
		.def("AcquireFifoReadElementsU16", &pynifpga::AcquireFifoReadElementsU16)
		.def("AcquireFifoReadElementsI32", &pynifpga::AcquireFifoReadElementsI32)
		.def("AcquireFifoReadElementsU32", &pynifpga::AcquireFifoReadElementsU32)
		.def("AcquireFifoReadElementsI64", &pynifpga::AcquireFifoReadElementsI64)
		.def("AcquireFifoReadElementsU64", &pynifpga::AcquireFifoReadElementsU64)
		.def("AcquireFifoWriteElementsBool", &pynifpga::AcquireFifoWriteElementsBool)
		.def("AcquireFifoWriteElementsI8", &pynifpga::AcquireFifoWriteElementsI8)
		.def("AcquireFifoWriteElementsU8", &pynifpga::AcquireFifoWriteElementsU8)
		.def("AcquireFifoWriteElementsI16", &pynifpga::AcquireFifoWriteElementsI16)
		.def("AcquireFifoWriteElementsU16", &pynifpga::AcquireFifoWriteElementsU16)
		.def("AcquireFifoWriteElementsI32", &pynifpga::AcquireFifoWriteElementsI32)
		.def("AcquireFifoWriteElementsU32", &pynifpga::AcquireFifoWriteElementsU32)
		.def("AcquireFifoWriteElementsI64", &pynifpga::AcquireFifoWriteElementsI64)
		.def("AcquireFifoWriteElementsU64", &pynifpga::AcquireFifoWriteElementsU64)
		.def("ReleaseFifoElements", &pynifpga::ReleaseFifoElements)
		.def("GetPeerToPeerFifoEndpoint", &pynifpga::GetPeerToPeerFifoEndpoint)
		;
	enum_<NiFpga_OpenAttribute>("OpenAttribute")
		.value("NoRun", NiFpga_OpenAttribute_NoRun);
	enum_<NiFpga_CloseAttribute>("CloseAttribute")
		.value("NoResetIfLastSession", NiFpga_CloseAttribute_NoResetIfLastSession);
	enum_<NiFpga_RunAttribute>("RunAttribute")
		.value("WaitUntilDone", NiFpga_RunAttribute_WaitUntilDone);
	enum_<NiFpga_Irq>("Irq")
		.value("0",NiFpga_Irq_0)
		.value("1",NiFpga_Irq_1)
		.value("2",NiFpga_Irq_2)
		.value("3",NiFpga_Irq_3)
		.value("4",NiFpga_Irq_4)
		.value("5",NiFpga_Irq_5)
		.value("6",NiFpga_Irq_6)
		.value("7",NiFpga_Irq_7)
		.value("8",NiFpga_Irq_8)
		.value("9",NiFpga_Irq_9)
		.value("10",NiFpga_Irq_10)
		.value("11",NiFpga_Irq_11)
		.value("12",NiFpga_Irq_12)
		.value("13",NiFpga_Irq_13)
		.value("14",NiFpga_Irq_14)
		.value("15",NiFpga_Irq_15)
		.value("16",NiFpga_Irq_16)
		.value("17",NiFpga_Irq_17)
		.value("18",NiFpga_Irq_18)
		.value("19",NiFpga_Irq_19)
		.value("20",NiFpga_Irq_20)
		.value("21",NiFpga_Irq_21)
		.value("22",NiFpga_Irq_22)
		.value("23",NiFpga_Irq_23)
		.value("24",NiFpga_Irq_24)
		.value("25",NiFpga_Irq_25)
		.value("26",NiFpga_Irq_26)
		.value("27",NiFpga_Irq_27)
		.value("28",NiFpga_Irq_28)
		.value("29",NiFpga_Irq_29)
		.value("30",NiFpga_Irq_30)
		.value("31",NiFpga_Irq_31);
}
